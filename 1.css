/* p {color: black; background-color: orange}
h1 {color: orange;}
p {color: black; font-size: 130%;}
#intro {color: black; background-color: orange;}
.first {font-size: 200%;}
em {color: aqua; background-color: brown;} */
p.serif {font-family:"Times New Roman", Times, serif;}
/* Разделяй каждое значение запятой чтобы указать, что они являются альтернативными.
Если имя семейства шрифта содержит более одного слова, то оно должно быть указано в кавычках "Times New Roman"
  Свойство font-family должно содержать несколько имен шрифтов, в качестве "запасных". При определении веб шрифта
  в стиле CSS, добавь более одного имени шрифта, чтобы избежать неопределенного поведения.
  Если компьютер клиента по каким-либо причинам не имеет шрифт, который вы выбрали, то он попробует другой
  Указание общего семейства шрифтов является хорошей практикой, чтобы позволить браузеру выбрать похожий шрифт в семействе, если другие не доступны*/
p.sanserif {font-family: Halvetica, Arial, sans-serif;}
p.monospace {font-family: "Courier New", Courier, monospace;}
p.cursive {font-family: Florence, cursive;}
p.fantasy {font-family: Blippo, fantasy;}
p.small {font-size: small;}
h1 {font-size: 20px;} /* оба примера выведут одинаковый результат, потому что 20/16=1.25em */
h1 {font-size: 1.25em;}
/* Свойство font-size устанавливает размер шрифта. Одним из способов установки размера шрифта является использование ключевых слов.
Например: xx-small, small, medium, large, larger, и т.д. Ключевые слова полезны, если вы не хотите, чтобы пользователь мог увеличить размер шрифта,
потому что это может неблагоприятно сказаться на внешнем виде вашего сайта.
Так же можно использовать числовые значения в пикселях или ем для управления размером шрифта.
Установка размера шрифта в пикселях (рх) является хорошим выбором, когда вам необходима точность в пикселях, это дает вам полный контроль над размером текста.
Использование ем является другим способом установки размера шрифта (ем является относительной единицей измерения).
Оно позволяет большинству браузеров изменять размер текста.
Если вы не установили самостоятельно размер шрифта на странице, то браузер будет использовать размер по умолчанию, который равен 16рх.
чтобы посчитать размер в ем, используй следующую формулу: em=pixels/16 */
p.medium {font-size: medium;}
p.large {font-size: large;}
p.xlarge {font-size: x-large;}
p.italic {font-style: italic;} /* Свойство font-style обычно используется для применения курсивного начертания к тексту
 Свойство font-style имеет три значения: normal, italic, oblique.
 Oblique (наклонный шрифт) очень похож на курсив, но является менее поддерживаемым*/
p.normal {font-style: normal;}
p.oblique {font-style: oblique;}
p.light {font-weight: lighter;}
p.bold {font-weight: bold;}
p.bolder {font-weight: bolder;} /* Свойство font-weight управляет толщиной текста. Могут быть установлены значения
normal (размер по умолчанию), bold, bolder, lighter
 Если необходимо, можно задать толщину шрифта с помощью числа от 100(тонкий) до 900(жирный).
 400 это тоже самое что и normal, а 700 тоже самое что и bold */
p.light {font-weight: lighter;}
p.thick {font-weight: bold;}
p.thicker {font-weight: 700;}
p.normal {font-variant: normal;}
p.small {font-variant: small-caps;} /* Свойство font-variant позволяет конвертировать ваш шрифт в маленькие заглавные буквы.
Значениями могут быть установлены normal, small-caps, inherit.
 Не каждый шрифт поддерживает свойство CSS font-variant, так что не забудь его протестировать */
p.example {color: green;} /* Свойство Color определяет цвет текста. Один метод спецификации цвета текста используется название:
например red, green, blue. */
h1 {color: #0000FF}
p.example2 {color: rgb(255,0,0);} /* другим способом определения цвета является использование шестнадцатеричных значений и RGB.
Шестнадцаречиная форма состоит из знака решетки (#), после которой следуют максимум, 6 значений (0-F).
RGB определяет индивидуальные значения для Red, Green, Blue.*/
p.left {text-align: left;}
p.right {text-align: right;}
p.center {text-align: center;}  /* Свойство text-align определяет горизонтальное расположение текста в элементе.
По умолчанию текст на вашем веб-сайте выравнен по левому краю. Однако, может понадобиться иное расположение.
Значениями свойства text-align являются: left, right, center, justify.
Если свойство text-align включено на justify, то каждая строка растягивается таким образом, что будет иметь равную ширину,
а левое и правое поля будут ровными (как в журналах и газетах) */
td.top {vertical-align: top;}
td.middle {vertical-align: middle;}
td.bottom {vertical-align: bottom;} /* Свойство vertical-align устанавливает вертикальное положение элемента.
Используемыми значениями являются top, middle, bottom.
 Свойство vertical-align также принимает следуюшие значения: baseline, sub, super, %(проценты), px(пиксели) (pt,cm(сантиметры))
  Свойство расположения по вертикали не действует одинаково на все элементы.
  Например, дополнительная CSS стилизация необходима для элементов <div>
   display: inline-table; display-cell; правила применяются для работы свойства vertical-align c divs */
span.baseline {vertical-align: baseline;}
span.sub {vertical-align: sub;}
span.super {vertical-align: super;}
span.pixel {vertical-align: -10px;}
.main {height: 150px; width: 400px; background-color: aqua; display: inline-table;}
.paragraph {display: table-cell; vertical-align: middle;}
p.none {text-decoration: none;}
p.inherit {text-decoration: inherit;}
p.overline {text-decoration: overline;}
p.underline {text-decoration: underline;}
p.line-trought {text-decoration: line-through;} /* Свойство text-decoration определяет, как будет докорирован текст.
Наиболее часто используемые значения:
none - Значение по умолчанию, определяет нормальный текст
inherit - Наследует это свойство от родительского элемента
overline - Рисует горизонтальную линию над текстом
underline - Рисует горизонтальную линию под текстом
line-thought - рисует горизонтальную линию сквозь текст (заменяет HTML тег <s>)
Можно комбинировать значения: underline, overline,line-thought указывая их через пробел, чтобы добавить несколько линий. */
