/* p {color: black; background-color: orange}
h1 {color: orange;}
p {color: black; font-size: 130%;}
#intro {color: black; background-color: orange;}
.first {font-size: 200%;}
em {color: aqua; background-color: brown;} */
p.serif {font-family:"Times New Roman", Times, serif;}
/* Разделяй каждое значение запятой чтобы указать, что они являются альтернативными.
Если имя семейства шрифта содержит более одного слова, то оно должно быть указано в кавычках "Times New Roman"
  Свойство font-family должно содержать несколько имен шрифтов, в качестве "запасных". При определении веб шрифта
  в стиле CSS, добавь более одного имени шрифта, чтобы избежать неопределенного поведения.
  Если компьютер клиента по каким-либо причинам не имеет шрифт, который вы выбрали, то он попробует другой
  Указание общего семейства шрифтов является хорошей практикой, чтобы позволить браузеру выбрать похожий шрифт в семействе, если другие не доступны*/
p.sanserif {font-family: Halvetica, Arial, sans-serif;}
p.monospace {font-family: "Courier New", Courier, monospace;}
p.cursive {font-family: Florence, cursive;}
p.fantasy {font-family: Blippo, fantasy;}
p.small {font-size: small;}
h1 {font-size: 20px;} /* оба примера выведут одинаковый результат, потому что 20/16=1.25em */
h1 {font-size: 1.25em;}
/* Свойство font-size устанавливает размер шрифта. Одним из способов установки размера шрифта является использование ключевых слов.
Например: xx-small, small, medium, large, larger, и т.д. Ключевые слова полезны, если вы не хотите, чтобы пользователь мог увеличить размер шрифта,
потому что это может неблагоприятно сказаться на внешнем виде вашего сайта.
Так же можно использовать числовые значения в пикселях или ем для управления размером шрифта.
Установка размера шрифта в пикселях (рх) является хорошим выбором, когда вам необходима точность в пикселях, это дает вам полный контроль над размером текста.
Использование ем является другим способом установки размера шрифта (ем является относительной единицей измерения).
Оно позволяет большинству браузеров изменять размер текста.
Если вы не установили самостоятельно размер шрифта на странице, то браузер будет использовать размер по умолчанию, который равен 16рх.
чтобы посчитать размер в ем, используй следующую формулу: em=pixels/16 */
p.medium {font-size: medium;}
p.large {font-size: large;}
p.xlarge {font-size: x-large;}
p.italic {font-style: italic;} /* Свойство font-style обычно используется для применения курсивного начертания к тексту
 Свойство font-style имеет три значения: normal, italic, oblique.
 Oblique (наклонный шрифт) очень похож на курсив, но является менее поддерживаемым*/
p.normal {font-style: normal;}
p.oblique {font-style: oblique;}
p.light {font-weight: lighter;}
p.bold {font-weight: bold;}
p.bolder {font-weight: bolder;} /* Свойство font-weight управляет толщиной текста. Могут быть установлены значения
normal (размер по умолчанию), bold, bolder, lighter
 Если необходимо, можно задать толщину шрифта с помощью числа от 100(тонкий) до 900(жирный).
 400 это тоже самое что и normal, а 700 тоже самое что и bold */
p.light {font-weight: lighter;}
p.thick {font-weight: bold;}
p.thicker {font-weight: 700;}
p.normal {font-variant: normal;}
p.small {font-variant: small-caps;} /* Свойство font-variant позволяет конвертировать ваш шрифт в маленькие заглавные буквы.
Значениями могут быть установлены normal, small-caps, inherit.
 Не каждый шрифт поддерживает свойство CSS font-variant, так что не забудь его протестировать */
p.example {color: green;} /* Свойство Color определяет цвет текста. Один метод спецификации цвета текста используется название:
например red, green, blue. */
h1 {color: #0000FF}
p.example2 {color: rgb(255,0,0);} /* другим способом определения цвета является использование шестнадцатеричных значений и RGB.
Шестнадцаречиная форма состоит из знака решетки (#), после которой следуют максимум, 6 значений (0-F).
RGB определяет индивидуальные значения для Red, Green, Blue.*/
p.left {text-align: left;}
p.right {text-align: right;}
p.center {text-align: center;}  /* Свойство text-align определяет горизонтальное расположение текста в элементе.
По умолчанию текст на вашем веб-сайте выравнен по левому краю. Однако, может понадобиться иное расположение.
Значениями свойства text-align являются: left, right, center, justify.
Если свойство text-align включено на justify, то каждая строка растягивается таким образом, что будет иметь равную ширину,
а левое и правое поля будут ровными (как в журналах и газетах) */
td.top {vertical-align: top;}
td.middle {vertical-align: middle;}
td.bottom {vertical-align: bottom;} /* Свойство vertical-align устанавливает вертикальное положение элемента.
Используемыми значениями являются top, middle, bottom.
 Свойство vertical-align также принимает следуюшие значения: baseline, sub, super, %(проценты), px(пиксели) (pt,cm(сантиметры))
  Свойство расположения по вертикали не действует одинаково на все элементы.
  Например, дополнительная CSS стилизация необходима для элементов <div>
   display: inline-table; display-cell; правила применяются для работы свойства vertical-align c divs */
span.baseline {vertical-align: baseline;}
span.sub {vertical-align: sub;}
span.super {vertical-align: super;}
span.pixel {vertical-align: -10px;}
.main {height: 150px; width: 400px; background-color: darkred; display: inline-table;}
.paragraph {display: table-cell; vertical-align: middle;}
p.none {text-decoration: none;}
p.inherit {text-decoration: inherit;}
p.overline {text-decoration: overline;}
p.underline {text-decoration: underline;}
p.line-trought {text-decoration: line-through;}
p.blink {text-decoration: blink;}/* Свойство text-decoration определяет, как будет докорирован текст.
Наиболее часто используемые значения:
none - Значение по умолчанию, определяет нормальный текст
inherit - Наследует это свойство от родительского элемента
overline - Рисует горизонтальную линию над текстом
underline - Рисует горизонтальную линию под текстом
line-thought - рисует горизонтальную линию сквозь текст (заменяет HTML тег <s>)
Можно комбинировать значения: underline, overline,line-thought указывая их через пробел, чтобы добавить несколько линий.
 Другим значением свойства text-decoration является blink которое заставляет текст мигать,
 данное значение является доступным, но не рекомендуется к использованию, поэтому большинство браузеров его игнорируют*/
p.indient {text-indent: 60px;} /* Свойство text-indent определяет, сколько места по горизонтали должно быть оставлено до начала первой строки текста.
Значениями свойства являются: Lenght (px,pt,cm,em), %, inherit.
Также разрешено использование отрицательных значений. Первая строка будет выровнена по левому краю, если значение является отрицательным */
h1 {color: blue; font-size: 30pt; text-shadow: 5px 2px 4px grey;} /* Свойство text-shadow добавляет к тексту тень.
Оно принимает четыре значения: первое значение определяет длину тени по оси х (по горизонтали), второе значение определяет длину по оси у (по вертикали),
третье значение определяет размытие тени, а четвертое значение определяет цвет.
h1 {font-size: 30pt; text-shadow: rgba (0,0,255,1) -1px -2px 0.5em}
При работе с тенями вы можете использовать любые поддерживаемые CSS цветовые форматы. Для значений х и у могут применяться различные единицы измериний
(как px,cm,mm,in,pc,pt) Отрицальные значения также доступны для использования.
Браузер IE версии 9 и старше не поддерживает свойство text-shadow */
p.capitalize {text-transform: capitalize;} /* CSS свойство text-transform определяет регистр текста.
Например можно сделать каждое слово в тексте с заглавной буквы. Используя свойство text-transform,
вы можете изменить регистр всего текста на нижний или верхний.Значение none не меняет регистр символов. */
p.uppercase {text-transform: uppercase;}
p.lowercase {text-transform: lowercase;}
p.normal {letter-spacing: normal;}
p.positive {letter-spacing: 4px;} /* Свойство letter-spacing определяет расстояние между символами в тексте.
Значениями могут быть:
normal - определяет стиль по умолчанию, без дополнительного расстояния между символами
length - определяет дополнительное расстояние между символами, с помощью единиц измерения px,pt,cm,em
inherit - наследует значение родителя
Использование отрицательных значений также разрешено для определения расстояния между символами. */
p.negative {letter-spacing: -1.5px;}
p.normal {word-spacing: normal;}
p.px {word-spacing: 30px;} /* Свойство word-spacing определяет расстояние между словами в тексте.
Также, как и в свойстве letter-spacing, можно использовать значения normal, length, inherit.
Когда было использовано странное расстояние между словами, а необходимо, чтобы выбранный параграф имел нормальное расстояние между словами,
следует использовать значение normal.*/
p.positive {word-spacing: 20px;}
p.negative {word-spacing: -5px;} /* Единицы измерения, для определения дополнительного расстояния между словами вы можете использовать
положительные значения в таких единицах измерений, как px,pt,pc,cm,mm,inches,em,ex
Использование отрицательных значений также разрешено. */
p.nowrap {white-space: nowrap;} /* Свойство white-space определяет, как будут отображаться пробелы внутри элемента.
Значениями могут быть normal, inherit, nowrap. При значении nowrap, текст продолжается на одной линии без переноса строки
до следующего тега <br>, а также перобразовывает множественные пробелы между элементами в один */
p.pre {white-space: pre;}
p.preline {white-space: pre-line;}
p.prewrap {white-space: pre-wrap;} /* Свойство white-space также поддерживает другие значения:
pre - текст показывается с учетом всех пробелов и переносов
pre-line - текст будет перенесен на следующую строку, при соответствующей команде в коде, пробелы игнорируются
pre-wrap - в тексте сохраняются все пробелы и переносы
Значение pre-wrap ведет себя также как и значение pre, не считая того, что оно добавляет дополнительные переносы строк, в случае,
если строка по ширине не помещается в заданную область */