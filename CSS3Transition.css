/*Переходы в CSS3
transition-property - указывает свойство, к которомц будет применен переход
transition-duration - определяет продолжительность, в течение которой произойдет переход
transition-timing-function - определяет, как будет изменяться темп перехода во время его продолжительности
transition-delay - определяет задержку (в секундах) для эффекта перехода
Эффект перехода может быть применен к широкому множеству свойств CSS, включая
background-color, width, height, opacity.
Когда курсор выходит за пределы элемента, то он постепенно вернется к своему первоначальному размеру.
Свойство transition-timing-function определяет насколько быстро должно изменяться значение стилевого свойства,
для которого применяется значение стилевого текста
ease - анимация начинается медленно, потом ускоряется
ease-in - начинается медленно, затем ускоряется и останавливается резко
ease-out - начинается быстро, но замедляется до остановки
ease-in-out - похоже на ease, но с более тонким ускорением и замедлением
linear - постоянная скорость прохождения анимации; часто применяется для изменения цвета и прозрачности.
Если не определена функция, то значением по умолчанию является ease.
rotate() - вращает элемент по или против часовой стрелки, в соответствии с заданным градусом
Отрицательные значения приведут к вращению против часовой стрелки
Свойство trandform-origin позволяет изменять позицию трансформируемого элемента.
Значением по умолчанию является 50% 50%, что соответствует центру элемента
0 0 это тоже самое что и top left, 100% 100% это bottom right
transform-origin используется с transform
translate() - двигает элемент с его текущей позиции.
skew() - наклоняет элемент
scale() - увеличивает или уменьшает размер элемента
 */
body {
    background-color: #E6FF00; font-style: italic;
}
#tcube {
    width: 50px; height: 50px;
    background:-moz-linear-gradient(120deg ,magenta,black,black,magenta);
    transition: width 3s;
}
#tcube:hover {
    width: 300px;
}
h5 {
    width:300px; height:20px;
    text-align:center; color:#00F318;
    margin: -10px 0 0 0;
    background:-moz-linear-gradient(120deg ,magenta,black,black,magenta);
}
#b-rotate {
    width: 200px; height: 100px; margin-top: 30px;
    background:-moz-linear-gradient(120deg ,magenta,black,black,magenta);
}
#a-rotate {
    width: 200px; height: 100px; margin-top: 30px;
    background:-moz-linear-gradient(120deg ,magenta,black,black,magenta);
    transform: rotate(10deg);
}
#c-rotate {
    width: 200px; height: 100px; margin-top: 30px;
    background:-moz-linear-gradient(120deg ,magenta,black,black,magenta);
    transform: rotate(-10deg);
}
#empty-div {
    position: relative; height: 110px; width: 100px; margin: 30px;
    padding: 10px; border: 1px solid darkred;
}
#d-rotate {
    padding: 50px; position: absolute; border: 1px solid white; margin: 30px;
    background:-moz-linear-gradient(120deg ,magenta,black,black,magenta);
    transform: rotate(25deg); transform-origin: 20% 80%;
}
#translate {
    padding: 50px; position: absolute;
    background:-moz-linear-gradient(120deg ,magenta,black,black,magenta);
    transform: translate(100px, 10px);
}
#a-skew {
    width:200px; height:70px; padding:10px;
    background:-moz-linear-gradient(120deg ,magenta,black,black,magenta);
    border:4px solid darkred;
}
#b-skew {
    width:200px; height:70px; padding:10px; margin: 20px 0 20px 70px;
    background:-moz-linear-gradient(120deg ,magenta,black,black,magenta);
    border:4px solid darkred;
    transform: skew(30deg);
}
